<% require "dotenv"; Dotenv.load(".env") %>
service: music_share_api
image: <%= ENV.fetch("DOCKER_USERNAME") %>/music_share_api

# Only include your actual server IP
servers:
  web:
    - <%= ENV.fetch("SERVER_IP") %>
registry:
  username: ${DOCKER_USERNAME}
  password: ${KAMAL_REGISTRY_PASSWORD}
env:
  secret:
    - RAILS_MASTER_KEY
    - SPOTIFY_CLIENT_ID
    - SPOTIFY_CLIENT_SECRET
  clear:
    RAILS_ENV: production
    DATABASE_USERNAME:  <%= ENV.fetch("DATABASE_USERNAME") %>
    DATABASE_PASSWORD: <%= ENV.fetch("DATABASE_PASSWORD") %>
    DATABASE_HOST: music_share_api-db
    DATABASE_PORT: <%= ENV.fetch("DATABASE_PORT") %>
ssh:
  user: <%= ENV.fetch("SSH_USERNAME") %>
  key_data: <%= ENV.fetch("SSH_PRIVATE_KEY").lines.map(&:strip) %>

volumes:
  - "music_share_api_storage:/rails/storage"

builder:
  arch: amd64

# Configure PostgreSQL as an accessory
accessories:
  db:
    image: postgres:15
    host: <%= ENV.fetch("DATABASE_HOST") %>
    port: <%= ENV.fetch("DATABASE_PORT") %>
    env:
      POSTGRES_USER: <%= ENV.fetch("DATABASE_USERNAME") %>
      POSTGRES_PASSWORD: <%= ENV.fetch("DATABASE_PASSWORD") %>
      POSTGRES_DB: music_share_api_production
    volumes:
      - data:/var/lib/postgresql/data

proxy:
  healthcheck:
    interval: 10
    timeout: 15
